-- Copyright (c) 2016-present, SoundCloud Ltd.
-- All rights reserved.
--
-- This source code is distributed under the terms of a BSD license,
-- found in the LICENSE file.

{-# LANGUAGE DeriveGeneric              #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE TemplateHaskell            #-}

{{#models}}
{{#model}}
module Kubernetes.V1.{{package}}.{{classname}}
    ( {{classname}} (..){{#hasVars}}
    , {{#vars}}{{& name}}{{#hasMore}}
    , {{/hasMore}}{{/vars}}{{/hasVars}}
    ) where
{{/model}}
{{/models}}

import           Control.Lens.TH (makeLenses)
import           Data.Aeson.TH (deriveJSON, defaultOptions, fieldLabelModifier)
{{#models}}
{{#model}}
{{#hasVars}}
import           Data.Text (Text)
{{/hasVars}}
{{/model}}
{{/models}}
import           GHC.Generics (Generic)
import           Prelude hiding (drop, error, max, min)
import qualified Prelude as P
import           Test.QuickCheck (Arbitrary, arbitrary)
{{#models}}
{{#model}}
{{#hasVars}}
import           Test.QuickCheck.Instances ()
{{/hasVars}}
{{/model}}
{{/models}}
{{#imports}}import           Kubernetes.V1.{{import}} ({{import}})
{{/imports}}
{{#models}}
{{#model}}

-- | {{description}}
{{#hasVars}}
data {{classname}} = {{classname}}
    { _{{#vars}}{{& name}} :: {{^required}}Maybe {{/required}}{{datatype}}{{#hasMore}}
    , _{{/hasMore}}{{/vars}}
    } deriving (Show, Eq, Generic)
{{/hasVars}}
{{^hasVars}}
data {{classname}} = {{classname}} deriving (Show, Eq, Generic)
{{/hasVars}}

makeLenses ''{{classname}}

$(deriveJSON defaultOptions{fieldLabelModifier = P.drop 1} ''{{classname}})

{{#hasVars}}
instance Arbitrary {{classname}} where
    arbitrary = {{classname}} <$> {{#vars}}arbitrary{{#hasMore}} <*> {{/hasMore}}{{/vars}}
{{/hasVars}}
{{^hasVars}}
instance Arbitrary {{classname}} where
    arbitrary = return {{classname}}
{{/hasVars}}
{{/model}}
{{/models}}
